#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        scroll {
            bindings = <&lt 5 SPACE>;
            key-positions = <19 18>;
        };

        layer7 {
            bindings = <&lt 7 LEFT_GUI>;
            key-positions = <37 38>;
        };

        redo {
            bindings = <&kp LG(LS(Z))>;
            key-positions = <36 34 22>;
        };

        nobashi {
            bindings = <&kp MINUS>;
            key-positions = <9 22>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt TAB Q         &kp W         &kp E         &kp R                   &kp T                                                       &kp Y        &kp U    &kp I      &kp O    &mt MINUS P
&kp A             &kp S         &kp D         &kp F                   &kp G        &kp LEFT_SHIFT              &kp BACKSLASH      &kp H        &lt 4 J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                   &kp B        &kp TAB                     &kp RIGHT_BRACKET  &kp N        &kp M    &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_GUI  &lt_to_layer_0 6 LANG2  &lt 2 SPACE  &lt_to_layer_0 3 LANG1      &kp BACKSPACE      &lt 1 SPACE                               &kp MINUS
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp QUESTION  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9                                &kp RC(UP_ARROW)  &kp F2  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans           &trans        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans               &kp F13  &kp F6            &kp F7  &kp F8      &kp F9             &kp F10
&trans           &trans        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0      &trans   &trans            &trans  &trans      &trans             &kp F11
&trans           &trans        &trans           &trans           &trans           &trans               &trans   &trans                                                   &kp F12
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &trans  &trans          &kp UP_ARROW    &trans                                  &trans      &kp UP_ARROW    &trans     &trans  &trans
&kp TAB         &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans  &kp LEFT    &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans          &trans          &kp HOME         &kp SPACE      &trans  &kp DELETE  &kp ENTER       &trans     &trans  &trans
&trans          &trans  &trans          &trans          &trans           &trans         &trans  &trans                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        NUM {
            bindings = <
&kp MINUS           &kp PLUS   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9                                       &kp EXCLAMATION  &kp AT_SIGN                  &kp HASH                       &kp DOLLAR   &kp PERCENT
&kp SLASH           &kp DOT    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp COMMA            &kp UNDERSCORE  &kp QUESTION     &kp LEFT_PARENTHESIS         &kp RIGHT_PARENTHESIS          &kp LCTRL    &kp AMPERSAND
&mt LEFT_SHIFT DOT  &kp EQUAL  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0      &kp ASTRK       &mt COLON SEMI   &mt LEFT_BRACKET LEFT_BRACE  &mt RIGHT_BRACKET RIGHT_BRACE  &mt SQT DOT  &kp BACKSLASH
&trans              &trans     &trans           &trans           &trans           &trans               &trans          &trans                                                                                    &kp PIPE
            >;
        };

        MOUSE {
            bindings = <
&mt TAB Q         &kp W   &kp E   &kp R   &kp T                                  &kp UP_ARROW     &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)  &trans  &kp HOME
&kp A             &kp S   &kp D   &kp F   &kp G   &mkp LCLK      &kp LEFT_ARROW  &kp RIGHT_ARROW  &mkp LCLK           &mkp RCLK            &trans  &kp ENTER
&mt LEFT_SHIFT Z  &kp X   &kp C   &kp V   &kp B   &mkp RCLK      &trans          &kp DOWN_ARROW   &trans              &trans               &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans         &trans          &trans                                                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans    &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp HOME  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp END   &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp ESCAPE      &kp LG(TAB)   &kp LG(LS(LC(NUMBER_4)))  &trans     &kp BACKSPACE                                &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2      &bt BT_SEL 3  &kp BACKSPACE
&kp ENTER       &kp LEFT_ALT  &kp LEFT_GUI              &kp SPACE  &kp ENTER      &trans           &bootloader  &trans        &mkp LCLK      &trans            &trans        &trans
&kp LG(Z)       &trans        &trans                    &kp LG(C)  &kp LG(V)      &bootloader      &bootloader  &trans        &kt LESS_THAN  &kp GREATER_THAN  &trans        &bt BT_CLR
&kp LEFT_SHIFT  &trans        &trans                    &trans     &trans         &trans           &trans       &trans                                                       &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&kp LG(KP_NUMBER_0)      &kp LG(KP_NUMBER_2)       &kp LG(KP_NUMBER_3)        &kp LA(UP_ARROW)        &kp LA(DOWN_ARROW)                      &trans  &trans     &trans  &trans  &trans
&kp LG(LA(KP_NUMBER_0))  &kp LG(LA(KP_NUMBER_2))   &kp LG(LA(KP_NUMBER_3))    &kp LG(LA(LEFT_ARROW))  &kp LG(LA(RIGHT))   &trans      &trans  &trans  &mkp LCLK  &trans  &trans  &trans
&trans                   &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LG(LS(COMMA))       &kp LS(LG(PERIOD))  &trans      &trans  &trans  &trans     &trans  &trans  &trans
&trans                   &trans                    &trans                     &trans                  &trans              &trans      &trans  &trans                             &trans
            >;
        };
    };
};
